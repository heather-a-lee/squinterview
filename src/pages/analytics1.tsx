import PointCanvas from "@/components/PointCanvas";
import { getLargestTriangle, renderPoint } from "@/utils";
import { Container, Row, Col, Text } from "@nextui-org/react";
import axios from "axios";
import Head from "next/head";
import { useEffect, useRef, useState } from "react";

export default function Analytics() {
  const [points, setPoints] = useState([]);
  const [maxAreaData, setMaxAreaData] = useState({});
  const [funFact, setFunFact] = useState("");

  useEffect(() => {
    const data = localStorage.getItem("triangleData");
    const trianglePoints = JSON.parse(data);
    const points = trianglePoints.flatMap((trianglePoint) => {
      return Object.values(trianglePoint);
    });
    setPoints(points);
    const { maxArea, maxPoint } = getLargestTriangle(points);
    setMaxAreaData({ maxArea, maxPoint });
  }, []);

  useEffect(() => {
    if (Object.keys(maxAreaData).length === 0) {
      return;
    }
    const { maxArea } = maxAreaData;
    axios
      .get(`http://numbersapi.com/${maxArea}`)
      .then((res) => res.data)
      .then((data) => {
        setFunFact(data);
      });
  }, [maxAreaData]);

  return (
    <>
      <Head>
        <title>Squinterview</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <Container>
        <Row>
          <Col>
            <Text size="$2xl">Largest Triangle</Text>
            {maxAreaData && (
              <>
                <div>
                  {maxAreaData.maxPoint &&
                    Object.keys(maxAreaData.maxPoint).map((point) => (
                      <span>{renderPoint(maxAreaData.maxPoint[point])}</span>
                    ))}
                </div>
                <div>Area: {maxAreaData.maxArea}</div>
              </>
            )}
            {funFact && <div>{funFact}</div>}
          </Col>
          <Col>
            <PointCanvas points={points} maxArea={maxAreaData} />
          </Col>
        </Row>
      </Container>
    </>
  );
}
